#!/bin/bash
#
# SUBMIT launch script.
#

# Showing the program help

if [[ `echo $1 | grep -i "ver"` != "" ]]; then

   clear
   echo
   echo -e "\033[1;34m ========================================== \033[0m"
   echo -e "\033[1;33m Script Developed by:                       \033[0m"
   echo
   echo -e "\033[1;20m Daniel G. Silva                            \033[0m"
   echo -e "\033[1;30m e-mail: gabriel82silva.dg@gmail.com        \033[0m"
   echo -e "\033[1;30m         daniel.gabriel@academico.ufpb.br   \033[0m"
   echo -e "\033[1;34m ========================================== \033[0m"
   echo -e "\033[1;31m                    Last update: 09.03.2022 \033[0m"
   echo
   exit

elif [[ -z $1 ]]; then

   FILES=`ls *.com *.gjf *.inp *.xyz *.gro`

   clear
   echo
   echo -e "\033[1;34m --------------------------------------------------- \033[0m"
   echo -e "\033[1;31m submit <program> <input.ext> <-options> <-ntasks I> \033[0m"
   echo
   echo -e "\033[1;33m PARAMETERS                                          \033[0m"
   echo -e "\033[1;21m      program     [g09/orca/xtb/gmx program]         \033[0m"
   echo -e "\033[1;21m      input.ext   [Input GJF/COM/INP/XYZ/GRO file]   \033[0m"
   echo
   echo -e "\033[1;33m OPTIONS/DEFAULTS                                    \033[0m"
   echo -e "\033[1;21m     -options     [Program specific options]         \033[0m"
   echo -e "\033[1;21m     -ntasks I    [Number of processors][Default: 2] \033[0m"
   echo -e "\033[1;21m     -preserv     [Preserv the submission job file]  \033[0m"
   echo -e "\033[1;34m --------------------------------------------------- \033[0m"
   echo -e "\033[1;20m » AVAILABLE PROGRAMS                                \033[0m"
   echo -e "\033[1;34m --------------------------------------------------- \033[0m"
   echo -e "\033[1;30m » Solvate Main Program                              \033[0m"
   echo
   echo -e "\033[1;21m   solvate                                           \033[0m"
   echo
   echo -e "\033[1;30m » Solvate Modules (by execution stage)              \033[0m"
   echo
   echo -e "\033[1;21m   packs qmdff mdrun datas stats plots trajs         \033[0m"
   echo -e "\033[1;21m   hbond micro gcalc files                           \033[0m"
   echo
   echo -e "\033[1;30m » Solvate Sub-Modules (by alphabetic order)         \033[0m"
   echo
   echo -e "\033[1;21m   check compt confs delta imags infos infov outin   \033[0m"
   echo -e "\033[1;21m   suite summy suppy sview                           \033[0m"
   echo
   echo -e "\033[1;30m » Other Programs (by alphabetic order)              \033[0m"
   echo
   echo -e "\033[1;21m   rung09  rung16 rungv5 runorca rungmx              \033[0m"
   echo -e "\033[1;21m   runxtb  runcrest                                  \033[0m"
   echo -e "\033[1;21m   runjmol runvmd runpackmol runqforce               \033[0m"
   echo -e "\033[1;34m --------------------------------------------------- \033[0m"
   echo

   infos -compact

   if [[ $FILES != "" ]]; then
      echo
      echo " Input(s):"
      echo
      echo " » "$FILES
      echo
   else
      echo
   fi

   exit

fi

# Determining system batch

if [[ `echo $(which sbatch)` != "" && `echo $@ | grep -i "\-local"` = "" ]]; then
   MACHINE="SBATCH"
elif [[ `echo $(which gmx)` != "" ]]; then
   MACHINE="LOCAL"
else
   echo
   echo " --------------------------------------"
   echo " The execution machine is not defined."
   echo " Please adjust the submission script."
   echo " --------------------------------------"
   echo
   exit
fi

# Determining system configuration

NUMMACS=1 # <<< For a job running on a cluster, modify this !!

if [[ `lscpu      | grep -ia "Thread(s) per núcleo:"  | grep -ia -v list | grep -ia -v numa | head -n1 | awk '{print $4}'` != "" ]]; then
   MAXCPUS=`lscpu | grep -ia "CPU(s):"                | grep -ia -v list | grep -ia -v numa | head -n1 | awk '{print $2}'`
   MAXPROC=$((NUMMACS*MAXCPUS))
else
   MAXCPUS=`lscpu | grep -ia "CPU(s):"                | grep -ia -v list | grep -ia -v numa | head -n1 | awk '{print $2}'`
   MAXPROC=$((NUMMACS*MAXCPUS))
fi

# Verify if program and input files exist

if [[ `echo $(which $1)` = "" ]]; then
   echo
   echo " -------------------------------"
   echo " Input: "$1
   echo " -------------------------------"
   echo " The program file was not found!"
   echo " -------------------------------"
   echo
   exit
elif [[ ! -f $2 ]]; then
   echo
   echo " -----------------------------"
   echo " Input: "$1
   echo " -----------------------------"
   echo " The input file was not found!"
   echo " -----------------------------"
   echo
   exit
fi

# Setting environment variables

PROGEXE=$1
JOBNAME=`echo $2 | sed s/\.com/\/ | sed s/\.inp/\/ | sed s/\.xyz/\/ | sed s/\.gro/\/ | sed s/\.pdb/\/ | sed s/\.ent/\/ | sed s/\.log/\/ | sed s/\.out/\/ | sed s/\.xtb/\/ | sed s/\.trj/\/ | sed s/\.trx/\/ | sed s/\.try/\/ | sed s/\.trz/\/ | sed s/\.slt/\/ | sed s/\.tng/\/ | sed s/\.trr/\/ | sed s/\.xtc/\/`
INPNAME=$2
WORKDIR=$JOBNAME"_running"
WORKCFG=`echo $@ | sed s/\$1/\/ | sed s/\$2/\/ | sed s/\-preserv/\/`

# Setting execution parameters

CNTASKS="2" # Default value
CFGSAVE="NO"
while [ "$1" != "" ]; do
   case $1 in
      -ntasks|-proc|-procs|-nproc|-nprocs)
         if [ -n "$2" ]; then
            CNTASKS="$2"
            shift 2
            continue
         else
            echo ' ERROR: the option "-ntasks" requires a non-empty argument.'
            exit
         fi;;
      -preserv)
         CFGSAVE="YES";;
   esac
   shift
done
if [[ $CNTASKS != "" && $(echo "$CNTASKS > $MAXPROC" | bc) -eq 1 ]]; then
   CNTASKS=$MAXPROC
fi

# Showing execution information

echo
echo " Creating and executing the job..."
echo " ========================================================="
echo "  JOB Name:" $JOBNAME
echo "   Program:" $PROGEXE
echo "     Input:" $INPNAME
echo "   Options:" $WORKCFG
echo "    Procs.:" $CNTASKS "(Max.:" $MAXPROC")"
echo " ========================================================="
echo

# Creating and executing the job

if [[ $MACHINE = "SBATCH" ]]; then

   echo '#!/bin/bash                                                '  > $JOBNAME.job
   echo '                                                           ' >> $JOBNAME.job
   echo '#SBATCH --job-name='$JOBNAME'                              ' >> $JOBNAME.job
  #echo '#SBATCH --ntasks='$CNTASKS'                                ' >> $JOBNAME.job
   echo '#SBATCH --ntasks-per-node='$CNTASKS'                       ' >> $JOBNAME.job
   echo '#SBATCH --time=300:00:00                                   ' >> $JOBNAME.job
   echo '                                                           ' >> $JOBNAME.job
   echo 'echo "## Job started at"' $(date +'%d-%m-%Y as %T') '      ' >> $JOBNAME.job
   echo 'echo "## Job execution node:  $(hostname -s)"              ' >> $JOBNAME.job
   echo 'echo "## Job number of tasks: $SLURM_NTASKS"               ' >> $JOBNAME.job
   echo 'echo "## Submission folder:   $SLURM_SUBMIT_DIR"           ' >> $JOBNAME.job
   echo 'echo "## Executing folder:    $SLURM_SUBMIT_DIR/'$WORKDIR'"' >> $JOBNAME.job
   echo '                                                           ' >> $JOBNAME.job
   echo $PROGEXE $INPNAME $WORKCFG' &                               ' >> $JOBNAME.job
   echo '                                                           ' >> $JOBNAME.job

   sed -i "s/ntasks=[0-9][0-9][0-9]//g" $JOBNAME.job
   sed -i "s/ntasks=[0-9][0-9]//g" $JOBNAME.job
   sed -i "s/ntasks=[0-9]//g" $JOBNAME.job

   sbatch $JOBNAME.job; if [ $CFGSAVE = "NO" ]; then rm -f $JOBNAME.job ; fi

   echo

elif [[ $MACHINE = "LOCAL" ]]; then

   $PROGEXE $INPNAME $WORKCFG &

fi
